{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Gestion de Bases de Donn\u00e9es avec Docker Bienvenue dans la documentation du projet ! Ce site vous guide dans la gestion et l'utilisation de plusieurs bases de donn\u00e9es avec Docker. Contenu Installation : Pr\u00e9parer l'environnement. Utilisation de Makefile : Simplifiez vos commandes Docker. Bases de Donn\u00e9es : Instructions sp\u00e9cifiques pour chaque base. Avanc\u00e9 : Concepts avanc\u00e9s et bonnes pratiques. FAQ : Questions fr\u00e9quentes et solutions. Bonne lecture !","title":"Accueil"},{"location":"#gestion-de-bases-de-donnees-avec-docker","text":"Bienvenue dans la documentation du projet ! Ce site vous guide dans la gestion et l'utilisation de plusieurs bases de donn\u00e9es avec Docker.","title":"Gestion de Bases de Donn\u00e9es avec Docker"},{"location":"#contenu","text":"Installation : Pr\u00e9parer l'environnement. Utilisation de Makefile : Simplifiez vos commandes Docker. Bases de Donn\u00e9es : Instructions sp\u00e9cifiques pour chaque base. Avanc\u00e9 : Concepts avanc\u00e9s et bonnes pratiques. FAQ : Questions fr\u00e9quentes et solutions. Bonne lecture !","title":"Contenu"},{"location":"dbeaver/","text":"DBeaver DBeaver est un client SQL universel et une interface d'administration de bases de donn\u00e9es qui supporte plus de 80 syst\u00e8mes de bases de donn\u00e9es diff\u00e9rents. Lancement de DBeaver Via le Makefile make run-dbeaver Acc\u00e9dez ensuite \u00e0 l'interface web : http://localhost:8080 Premi\u00e8re configuration Cr\u00e9ez un compte admin lors du premier acc\u00e8s S\u00e9lectionnez votre langue pr\u00e9f\u00e9r\u00e9e Configurez vos connexions via le menu \"Database\" Configuration des connexions MariaDB Type : MariaDB Host : localhost Port : 3307 Database : mariadb User : mariadb Password : mariadb Param\u00e8tres avanc\u00e9s : allowPublicKeyRetrieval = true useSSL = false PostgreSQL Type : PostgreSQL Host : localhost Port : 1234 Database : postgres User : postgres Password : postgres Param\u00e8tres SSL : D\u00e9sactiv\u00e9 MySQL Type : MySQL Host : localhost Port : 3306 Database : mysql User : root Password : root Param\u00e8tres critiques : allowPublicKeyRetrieval = true \u2794 Obligatoire useSSL = false \u2794 Recommand\u00e9 Fonctionnalit\u00e9s cl\u00e9s \u00c9diteur SQL intelligent avec auto-compl\u00e9tion Visualisation des sch\u00e9mas de base de donn\u00e9es Gestion des utilisateurs et permissions Import/Export de donn\u00e9es en multiples formats Monitoring des performances en temps r\u00e9el D\u00e9pannage MySQL Erreur \"Public Key Retrieval\" : 1. Dans l'onglet \"Param\u00e8tres du pilote\" : allowPublicKeyRetrieval = true useSSL = false 2. Red\u00e9marrer DBeaver si n\u00e9cessaire 3. V\u00e9rifier que le conteneur MySQL est bien configur\u00e9 : make clean-mysql && make run-mysql Bonnes pratiques Utilisez des connexions s\u00e9par\u00e9es pour chaque environnement (dev/test/prod) Activez le chiffrement SSL pour les connexions externes Sauvegardez r\u00e9guli\u00e8rement vos configurations de connexion Utilisez les snippets SQL pour les requ\u00eates r\u00e9currentes Liens utiles Site officiel DBeaver Documentation compl\u00e8te Guide des pilotes JDBC DBeaver simplifie la gestion multi-bases gr\u00e2ce \u00e0 son interface unifi\u00e9e. Son support \u00e9tendu des drivers et ses fonctionnalit\u00e9s d'exploration de donn\u00e9es en font un outil indispensable pour les d\u00e9veloppeurs et DBA.","title":"Dbeaver"},{"location":"dbeaver/#dbeaver","text":"DBeaver est un client SQL universel et une interface d'administration de bases de donn\u00e9es qui supporte plus de 80 syst\u00e8mes de bases de donn\u00e9es diff\u00e9rents.","title":"DBeaver"},{"location":"dbeaver/#lancement-de-dbeaver","text":"","title":"Lancement de DBeaver"},{"location":"dbeaver/#via-le-makefile","text":"make run-dbeaver Acc\u00e9dez ensuite \u00e0 l'interface web : http://localhost:8080","title":"Via le Makefile"},{"location":"dbeaver/#premiere-configuration","text":"Cr\u00e9ez un compte admin lors du premier acc\u00e8s S\u00e9lectionnez votre langue pr\u00e9f\u00e9r\u00e9e Configurez vos connexions via le menu \"Database\"","title":"Premi\u00e8re configuration"},{"location":"dbeaver/#configuration-des-connexions","text":"","title":"Configuration des connexions"},{"location":"dbeaver/#mariadb","text":"Type : MariaDB Host : localhost Port : 3307 Database : mariadb User : mariadb Password : mariadb Param\u00e8tres avanc\u00e9s : allowPublicKeyRetrieval = true useSSL = false","title":"MariaDB"},{"location":"dbeaver/#postgresql","text":"Type : PostgreSQL Host : localhost Port : 1234 Database : postgres User : postgres Password : postgres Param\u00e8tres SSL : D\u00e9sactiv\u00e9","title":"PostgreSQL"},{"location":"dbeaver/#mysql","text":"Type : MySQL Host : localhost Port : 3306 Database : mysql User : root Password : root Param\u00e8tres critiques : allowPublicKeyRetrieval = true \u2794 Obligatoire useSSL = false \u2794 Recommand\u00e9","title":"MySQL"},{"location":"dbeaver/#fonctionnalites-cles","text":"\u00c9diteur SQL intelligent avec auto-compl\u00e9tion Visualisation des sch\u00e9mas de base de donn\u00e9es Gestion des utilisateurs et permissions Import/Export de donn\u00e9es en multiples formats Monitoring des performances en temps r\u00e9el","title":"Fonctionnalit\u00e9s cl\u00e9s"},{"location":"dbeaver/#depannage-mysql","text":"Erreur \"Public Key Retrieval\" : 1. Dans l'onglet \"Param\u00e8tres du pilote\" : allowPublicKeyRetrieval = true useSSL = false 2. Red\u00e9marrer DBeaver si n\u00e9cessaire 3. V\u00e9rifier que le conteneur MySQL est bien configur\u00e9 : make clean-mysql && make run-mysql","title":"D\u00e9pannage MySQL"},{"location":"dbeaver/#bonnes-pratiques","text":"Utilisez des connexions s\u00e9par\u00e9es pour chaque environnement (dev/test/prod) Activez le chiffrement SSL pour les connexions externes Sauvegardez r\u00e9guli\u00e8rement vos configurations de connexion Utilisez les snippets SQL pour les requ\u00eates r\u00e9currentes","title":"Bonnes pratiques"},{"location":"dbeaver/#liens-utiles","text":"Site officiel DBeaver Documentation compl\u00e8te Guide des pilotes JDBC DBeaver simplifie la gestion multi-bases gr\u00e2ce \u00e0 son interface unifi\u00e9e. Son support \u00e9tendu des drivers et ses fonctionnalit\u00e9s d'exploration de donn\u00e9es en font un outil indispensable pour les d\u00e9veloppeurs et DBA.","title":"Liens utiles"},{"location":"faq/","text":"\u2753 Foire Aux Questions Probl\u00e8mes courants Erreur \"Public Key Retrieval\" avec MySQL Solution : 1. Dans DBeaver > Propri\u00e9t\u00e9s du pilote : allowPublicKeyRetrieval = true useSSL = false 2. Red\u00e9marrez le conteneur : make clean-mysql && make run-mysql R\u00e9initialiser toutes les donn\u00e9es make clean-all rm -rf ~/docker/* Acc\u00e8s aux bases depuis l'exterieur # Remplacer 'localhost' par votre IP locale mysql -h 192 .168.1.10 -P 3306 -u root -p Configuration avanc\u00e9e Modifier les ports \u00c9ditez le Makefile : # Avant run-postgres : -p 1234 :5432 # Apr\u00e8s (exemple pour PostgreSQL) -p 5432 :5432 Monitoring des performances docker stats --format \"table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\" Sauvegardes automatis\u00e9es # Exemple pour MySQL 0 2 * * * mysqldump -h localhost -u root -proot --all-databases > ~/backups/mysql_ $( date + \\% F ) .sql S\u00e9curit\u00e9 Activer l'authentification Redis Modifiez le Makefile : run-redis : -e REDIS_PASSWORD = votre_mdp Red\u00e9marrez : make clean-redis && make run-redis Chiffrer les connexions # Exemple pour PostgreSQL run-postgres : -e POSTGRES_SSL = on -v ~/ssl:/ssl \ud83d\udd17 Contact & Contributions D\u00e9p\u00f4t GitHub du projet : https://github.com/abrahamkoloboe27/Setup-Databases-With-Docker (Configuration Docker cl\u00e9 en main pour bases de donn\u00e9es) Profil GitHub : https://github.com/abrahamkoloboe27 (Projets open source et contributions communautaires) LinkedIn : https://www.linkedin.com/in/abraham-zacharie-koloboe (\u00c9changeons sur le DevOps, Data Engineering et MLops) \ud83d\udc1b Signaler un bug Ouvrez une issue sur GitHub en pr\u00e9cisant : La commande ex\u00e9cut\u00e9e Le message d'erreur complet Votre environnement (OS + version Docker) Cr\u00e9er une issue \u2757 Bonnes pratiques Toujours tester les sauvegardes Utiliser des mots de passe complexes Maintenir les images Docker \u00e0 jour","title":"FAQ"},{"location":"faq/#foire-aux-questions","text":"","title":"\u2753 Foire Aux Questions"},{"location":"faq/#problemes-courants","text":"","title":"Probl\u00e8mes courants"},{"location":"faq/#erreur-public-key-retrieval-avec-mysql","text":"Solution : 1. Dans DBeaver > Propri\u00e9t\u00e9s du pilote : allowPublicKeyRetrieval = true useSSL = false 2. Red\u00e9marrez le conteneur : make clean-mysql && make run-mysql","title":"Erreur \"Public Key Retrieval\" avec MySQL"},{"location":"faq/#reinitialiser-toutes-les-donnees","text":"make clean-all rm -rf ~/docker/*","title":"R\u00e9initialiser toutes les donn\u00e9es"},{"location":"faq/#acces-aux-bases-depuis-lexterieur","text":"# Remplacer 'localhost' par votre IP locale mysql -h 192 .168.1.10 -P 3306 -u root -p","title":"Acc\u00e8s aux bases depuis l'exterieur"},{"location":"faq/#configuration-avancee","text":"","title":"Configuration avanc\u00e9e"},{"location":"faq/#modifier-les-ports","text":"\u00c9ditez le Makefile : # Avant run-postgres : -p 1234 :5432 # Apr\u00e8s (exemple pour PostgreSQL) -p 5432 :5432","title":"Modifier les ports"},{"location":"faq/#monitoring-des-performances","text":"docker stats --format \"table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\"","title":"Monitoring des performances"},{"location":"faq/#sauvegardes-automatisees","text":"# Exemple pour MySQL 0 2 * * * mysqldump -h localhost -u root -proot --all-databases > ~/backups/mysql_ $( date + \\% F ) .sql","title":"Sauvegardes automatis\u00e9es"},{"location":"faq/#securite","text":"","title":"S\u00e9curit\u00e9"},{"location":"faq/#activer-lauthentification-redis","text":"Modifiez le Makefile : run-redis : -e REDIS_PASSWORD = votre_mdp Red\u00e9marrez : make clean-redis && make run-redis","title":"Activer l'authentification Redis"},{"location":"faq/#chiffrer-les-connexions","text":"# Exemple pour PostgreSQL run-postgres : -e POSTGRES_SSL = on -v ~/ssl:/ssl","title":"Chiffrer les connexions"},{"location":"faq/#contact-contributions","text":"D\u00e9p\u00f4t GitHub du projet : https://github.com/abrahamkoloboe27/Setup-Databases-With-Docker (Configuration Docker cl\u00e9 en main pour bases de donn\u00e9es) Profil GitHub : https://github.com/abrahamkoloboe27 (Projets open source et contributions communautaires) LinkedIn : https://www.linkedin.com/in/abraham-zacharie-koloboe (\u00c9changeons sur le DevOps, Data Engineering et MLops)","title":"\ud83d\udd17 Contact &amp; Contributions"},{"location":"faq/#signaler-un-bug","text":"Ouvrez une issue sur GitHub en pr\u00e9cisant : La commande ex\u00e9cut\u00e9e Le message d'erreur complet Votre environnement (OS + version Docker) Cr\u00e9er une issue","title":"\ud83d\udc1b Signaler un bug"},{"location":"faq/#bonnes-pratiques","text":"Toujours tester les sauvegardes Utiliser des mots de passe complexes Maintenir les images Docker \u00e0 jour","title":"\u2757 Bonnes pratiques"},{"location":"installation/","text":"\ud83d\udce5 Installation Pr\u00e9requis Docker (version 20.10+) Docker Compose (optionnel) Git Terminal compatible Unix (Bash/Zsh) 2 Go de RAM minimum \u00c9tapes d'installation Cloner le d\u00e9p\u00f4t : git clone https://github.com/votre-utilisateur/docker-db-starter.git cd docker-db-starter D\u00e9marrer toutes les bases de donn\u00e9es : make run-all V\u00e9rifier le fonctionnement : docker ps --format \"table {{.Names}}\\t{{.Ports}}\\t{{.Status}}\" Sortie attendue : NAMES PORTS STATUS postgres 0.0.0.0:1234->5432/tcp Up 2 minutes mysql-local 0.0.0.0:3306->3306/tcp Up 2 minutes redis-local 0.0.0.0:6379->6379/tcp Up 2 minutes Post-installation Acc\u00e9der \u00e0 DBeaver : http://localhost:8080 (Cr\u00e9ez un compte admin au premier lancement) Les donn\u00e9es sont persist\u00e9es dans : ~/docker/ \u251c\u2500\u2500 mysqldata # MySQL \u251c\u2500\u2500 pgdata # PostgreSQL \u2514\u2500\u2500 mongodata # MongoDB D\u00e9pannage initial Si un service ne d\u00e9marre pas : # Voir les logs d'un conteneur docker logs mysql-local -f # R\u00e9initialiser compl\u00e8tement make clean-all && make run-all Notes techniques Compatible avec : Linux (toutes distros) macOS 10.15+ Windows via WSL2 Consommation m\u00e9moire : ~500 MB au total Taille totale des images : ~1.2 GB","title":"Installation"},{"location":"installation/#installation","text":"","title":"\ud83d\udce5 Installation"},{"location":"installation/#prerequis","text":"Docker (version 20.10+) Docker Compose (optionnel) Git Terminal compatible Unix (Bash/Zsh) 2 Go de RAM minimum","title":"Pr\u00e9requis"},{"location":"installation/#etapes-dinstallation","text":"Cloner le d\u00e9p\u00f4t : git clone https://github.com/votre-utilisateur/docker-db-starter.git cd docker-db-starter D\u00e9marrer toutes les bases de donn\u00e9es : make run-all V\u00e9rifier le fonctionnement : docker ps --format \"table {{.Names}}\\t{{.Ports}}\\t{{.Status}}\" Sortie attendue : NAMES PORTS STATUS postgres 0.0.0.0:1234->5432/tcp Up 2 minutes mysql-local 0.0.0.0:3306->3306/tcp Up 2 minutes redis-local 0.0.0.0:6379->6379/tcp Up 2 minutes","title":"\u00c9tapes d'installation"},{"location":"installation/#post-installation","text":"Acc\u00e9der \u00e0 DBeaver : http://localhost:8080 (Cr\u00e9ez un compte admin au premier lancement) Les donn\u00e9es sont persist\u00e9es dans : ~/docker/ \u251c\u2500\u2500 mysqldata # MySQL \u251c\u2500\u2500 pgdata # PostgreSQL \u2514\u2500\u2500 mongodata # MongoDB","title":"Post-installation"},{"location":"installation/#depannage-initial","text":"Si un service ne d\u00e9marre pas : # Voir les logs d'un conteneur docker logs mysql-local -f # R\u00e9initialiser compl\u00e8tement make clean-all && make run-all","title":"D\u00e9pannage initial"},{"location":"installation/#notes-techniques","text":"Compatible avec : Linux (toutes distros) macOS 10.15+ Windows via WSL2 Consommation m\u00e9moire : ~500 MB au total Taille totale des images : ~1.2 GB","title":"Notes techniques"},{"location":"makefile-usage/","text":"Utilisation de Makefile Le fichier Makefile simplifie et automatise l'ex\u00e9cution des commandes Docker. Voici les principales commandes disponibles pour g\u00e9rer les bases de donn\u00e9es. Commandes disponibles D\u00e9marrer une base de donn\u00e9es sp\u00e9cifique Pour d\u00e9marrer une base de donn\u00e9es pr\u00e9cise, utilisez la commande suivante\u202f: make run-<nom_base> Exemples : - D\u00e9marrer PostgreSQL : make run-postgres - D\u00e9marrer MySQL : make run-mysql Arr\u00eater une base de donn\u00e9es sp\u00e9cifique Pour arr\u00eater une base de donn\u00e9es en cours d'ex\u00e9cution : make stop-<nom_base> Exemples : - Arr\u00eater PostgreSQL : make stop-postgres - Arr\u00eater MongoDB : make stop-mongo Nettoyer une base de donn\u00e9es sp\u00e9cifique Pour supprimer les conteneurs et volumes associ\u00e9s \u00e0 une base de donn\u00e9es : make clean-<nom_base> Exemples : - Nettoyer Redis : make clean-redis - Nettoyer MariaDB : make clean-mariadb Commandes globales D\u00e9marrer toutes les bases de donn\u00e9es Pour d\u00e9marrer toutes les bases de donn\u00e9es d\u00e9finies dans le Makefile : make run-all Arr\u00eater toutes les bases de donn\u00e9es Pour arr\u00eater toutes les bases de donn\u00e9es en cours d'ex\u00e9cution : make stop-all Nettoyer toutes les bases de donn\u00e9es Pour supprimer tous les conteneurs et volumes li\u00e9s aux bases de donn\u00e9es : make clean-all Astuces et Bonnes Pratiques V\u00e9rifiez les logs : En cas de probl\u00e8me, utilisez la commande suivante pour consulter les journaux d\u2019un conteneur : docker logs <nom_du_conteneur> Portabilit\u00e9 : Les commandes Makefile peuvent \u00eatre utilis\u00e9es sur n\u2019importe quelle machine avec Docker et Make install\u00e9s. Personnalisation : Vous pouvez \u00e9diter les ports, utilisateurs et mots de passe dans le fichier Makefile selon vos besoins. Exemple d'utilisation D\u00e9marrer PostgreSQL : make run-postgres Arr\u00eater PostgreSQL : make stop-postgres Nettoyer toutes les bases de donn\u00e9es : make clean-all Le fichier Makefile vous permet de gagner du temps et d\u2019automatiser la gestion de vos bases de donn\u00e9es Docker. Pour plus d'informations, consultez la documentation sp\u00e9cifique \u00e0 chaque base de donn\u00e9es.","title":"Utilisation du Makefile"},{"location":"makefile-usage/#utilisation-de-makefile","text":"Le fichier Makefile simplifie et automatise l'ex\u00e9cution des commandes Docker. Voici les principales commandes disponibles pour g\u00e9rer les bases de donn\u00e9es.","title":"Utilisation de Makefile"},{"location":"makefile-usage/#commandes-disponibles","text":"","title":"Commandes disponibles"},{"location":"makefile-usage/#demarrer-une-base-de-donnees-specifique","text":"Pour d\u00e9marrer une base de donn\u00e9es pr\u00e9cise, utilisez la commande suivante\u202f: make run-<nom_base> Exemples : - D\u00e9marrer PostgreSQL : make run-postgres - D\u00e9marrer MySQL : make run-mysql","title":"D\u00e9marrer une base de donn\u00e9es sp\u00e9cifique"},{"location":"makefile-usage/#arreter-une-base-de-donnees-specifique","text":"Pour arr\u00eater une base de donn\u00e9es en cours d'ex\u00e9cution : make stop-<nom_base> Exemples : - Arr\u00eater PostgreSQL : make stop-postgres - Arr\u00eater MongoDB : make stop-mongo","title":"Arr\u00eater une base de donn\u00e9es sp\u00e9cifique"},{"location":"makefile-usage/#nettoyer-une-base-de-donnees-specifique","text":"Pour supprimer les conteneurs et volumes associ\u00e9s \u00e0 une base de donn\u00e9es : make clean-<nom_base> Exemples : - Nettoyer Redis : make clean-redis - Nettoyer MariaDB : make clean-mariadb","title":"Nettoyer une base de donn\u00e9es sp\u00e9cifique"},{"location":"makefile-usage/#commandes-globales","text":"","title":"Commandes globales"},{"location":"makefile-usage/#demarrer-toutes-les-bases-de-donnees","text":"Pour d\u00e9marrer toutes les bases de donn\u00e9es d\u00e9finies dans le Makefile : make run-all","title":"D\u00e9marrer toutes les bases de donn\u00e9es"},{"location":"makefile-usage/#arreter-toutes-les-bases-de-donnees","text":"Pour arr\u00eater toutes les bases de donn\u00e9es en cours d'ex\u00e9cution : make stop-all","title":"Arr\u00eater toutes les bases de donn\u00e9es"},{"location":"makefile-usage/#nettoyer-toutes-les-bases-de-donnees","text":"Pour supprimer tous les conteneurs et volumes li\u00e9s aux bases de donn\u00e9es : make clean-all","title":"Nettoyer toutes les bases de donn\u00e9es"},{"location":"makefile-usage/#astuces-et-bonnes-pratiques","text":"V\u00e9rifiez les logs : En cas de probl\u00e8me, utilisez la commande suivante pour consulter les journaux d\u2019un conteneur : docker logs <nom_du_conteneur> Portabilit\u00e9 : Les commandes Makefile peuvent \u00eatre utilis\u00e9es sur n\u2019importe quelle machine avec Docker et Make install\u00e9s. Personnalisation : Vous pouvez \u00e9diter les ports, utilisateurs et mots de passe dans le fichier Makefile selon vos besoins.","title":"Astuces et Bonnes Pratiques"},{"location":"makefile-usage/#exemple-dutilisation","text":"D\u00e9marrer PostgreSQL : make run-postgres Arr\u00eater PostgreSQL : make stop-postgres Nettoyer toutes les bases de donn\u00e9es : make clean-all Le fichier Makefile vous permet de gagner du temps et d\u2019automatiser la gestion de vos bases de donn\u00e9es Docker. Pour plus d'informations, consultez la documentation sp\u00e9cifique \u00e0 chaque base de donn\u00e9es.","title":"Exemple d'utilisation"},{"location":"databases/cassandra/","text":"Cassandra Cassandra est une base de donn\u00e9es NoSQL distribu\u00e9e con\u00e7ue pour g\u00e9rer de grandes quantit\u00e9s de donn\u00e9es sur plusieurs serveurs avec haute disponibilit\u00e9. Commandes Makefile D\u00e9marrer Cassandra Pour d\u00e9marrer un conteneur Cassandra \u00e0 l'aide du Makefile : make run-cassandra Arr\u00eater Cassandra Pour arr\u00eater le conteneur Cassandra en cours d'ex\u00e9cution : make stop-cassandra Nettoyer Cassandra Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 Cassandra : make clean-cassandra Configuration par d\u00e9faut Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : cassandra:4.1 Port h\u00f4te : 9042 Nom d'utilisateur : cassandra Mot de passe : cassandra Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/cassandra dans le conteneur Connexion \u00e0 Cassandra Utilisation de CQLSH Connectez-vous avec la commande : docker exec -it cassandra-local cqlsh -u cassandra -p cassandra Connexion avec un client graphique Configuration recommand\u00e9e pour DBeaver : - H\u00f4te : localhost - Port : 9042 - Keyspace : system - Utilisateur : cassandra - Mot de passe : cassandra - Param\u00e8tres avanc\u00e9s : SSL = D\u00e9sactiv\u00e9 Consistency Level = LOCAL_ONE V\u00e9rification des logs Pour consulter les logs du conteneur Cassandra : docker logs cassandra-local Astuces Gestion du cluster : V\u00e9rifier l'\u00e9tat du n\u0153ud : docker exec cassandra-local nodetool status Sauvegarde de donn\u00e9es : Cr\u00e9er un snapshot : docker exec cassandra-local nodetool snapshot Requ\u00eates CQL basiques : CREATE KEYSPACE demo WITH replication = { 'class' : 'SimpleStrategy' , 'replication_factor' : 1 } ; USE demo ; CREATE TABLE users ( id UUID PRIMARY KEY , name TEXT ); Liens utiles Documentation officielle Cassandra CQL Cheat Sheet DataStax DevCenter (GUI) Cassandra est id\u00e9ale pour les applications n\u00e9cessitant une haute disponibilit\u00e9 et une scalabilit\u00e9 lin\u00e9aire. Son mod\u00e8le de partitionnement distribu\u00e9 en fait un choix privil\u00e9gi\u00e9 pour le Big Data et les architectures cloud.","title":"Cassandra"},{"location":"databases/cassandra/#cassandra","text":"Cassandra est une base de donn\u00e9es NoSQL distribu\u00e9e con\u00e7ue pour g\u00e9rer de grandes quantit\u00e9s de donn\u00e9es sur plusieurs serveurs avec haute disponibilit\u00e9.","title":"Cassandra"},{"location":"databases/cassandra/#commandes-makefile","text":"","title":"Commandes Makefile"},{"location":"databases/cassandra/#demarrer-cassandra","text":"Pour d\u00e9marrer un conteneur Cassandra \u00e0 l'aide du Makefile : make run-cassandra","title":"D\u00e9marrer Cassandra"},{"location":"databases/cassandra/#arreter-cassandra","text":"Pour arr\u00eater le conteneur Cassandra en cours d'ex\u00e9cution : make stop-cassandra","title":"Arr\u00eater Cassandra"},{"location":"databases/cassandra/#nettoyer-cassandra","text":"Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 Cassandra : make clean-cassandra","title":"Nettoyer Cassandra"},{"location":"databases/cassandra/#configuration-par-defaut","text":"Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : cassandra:4.1 Port h\u00f4te : 9042 Nom d'utilisateur : cassandra Mot de passe : cassandra Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/cassandra dans le conteneur","title":"Configuration par d\u00e9faut"},{"location":"databases/cassandra/#connexion-a-cassandra","text":"","title":"Connexion \u00e0 Cassandra"},{"location":"databases/cassandra/#utilisation-de-cqlsh","text":"Connectez-vous avec la commande : docker exec -it cassandra-local cqlsh -u cassandra -p cassandra","title":"Utilisation de CQLSH"},{"location":"databases/cassandra/#connexion-avec-un-client-graphique","text":"Configuration recommand\u00e9e pour DBeaver : - H\u00f4te : localhost - Port : 9042 - Keyspace : system - Utilisateur : cassandra - Mot de passe : cassandra - Param\u00e8tres avanc\u00e9s : SSL = D\u00e9sactiv\u00e9 Consistency Level = LOCAL_ONE","title":"Connexion avec un client graphique"},{"location":"databases/cassandra/#verification-des-logs","text":"Pour consulter les logs du conteneur Cassandra : docker logs cassandra-local","title":"V\u00e9rification des logs"},{"location":"databases/cassandra/#astuces","text":"Gestion du cluster : V\u00e9rifier l'\u00e9tat du n\u0153ud : docker exec cassandra-local nodetool status Sauvegarde de donn\u00e9es : Cr\u00e9er un snapshot : docker exec cassandra-local nodetool snapshot Requ\u00eates CQL basiques : CREATE KEYSPACE demo WITH replication = { 'class' : 'SimpleStrategy' , 'replication_factor' : 1 } ; USE demo ; CREATE TABLE users ( id UUID PRIMARY KEY , name TEXT );","title":"Astuces"},{"location":"databases/cassandra/#liens-utiles","text":"Documentation officielle Cassandra CQL Cheat Sheet DataStax DevCenter (GUI) Cassandra est id\u00e9ale pour les applications n\u00e9cessitant une haute disponibilit\u00e9 et une scalabilit\u00e9 lin\u00e9aire. Son mod\u00e8le de partitionnement distribu\u00e9 en fait un choix privil\u00e9gi\u00e9 pour le Big Data et les architectures cloud.","title":"Liens utiles"},{"location":"databases/mariadb/","text":"MariaDB MariaDB est un fork open-source de MySQL, offrant une compatibilit\u00e9 compl\u00e8te avec des performances optimis\u00e9es et des fonctionnalit\u00e9s \u00e9tendues. Commandes Makefile D\u00e9marrer MariaDB Pour d\u00e9marrer un conteneur MariaDB \u00e0 l'aide du Makefile : make run-mariadb Arr\u00eater MariaDB Pour arr\u00eater le conteneur MariaDB en cours d'ex\u00e9cution : make stop-mariadb Nettoyer MariaDB Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 MariaDB : make clean-mariadb Configuration par d\u00e9faut Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : mariadb:10.10 Port h\u00f4te : 3307 Utilisateur root : root / root Utilisateur standard : mariadb / mariadb Base de donn\u00e9es : mariadb Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/mysql dans le conteneur Connexion \u00e0 MariaDB Utilisation du client en ligne de commande Connectez-vous avec l'utilisateur standard : mysql -h localhost -P 3307 -u mariadb -p Mot de passe : mariadb Connexion avec un client graphique Configuration recommand\u00e9e pour DBeaver : - H\u00f4te : localhost - Port : 3307 - Base de donn\u00e9es : mariadb - Utilisateur : mariadb - Mot de passe : mariadb - Param\u00e8tres avanc\u00e9s : allowPublicKeyRetrieval=true useSSL=false V\u00e9rification des logs Pour consulter les logs du conteneur MariaDB : docker logs mariadb-local Astuces Migration depuis MySQL : mysqldump -h mysql-host -u user -p db_name | mysql -h localhost -P 3307 -u mariadb -p mariadb Activation du moteur ColumnStore : INSTALL SONAME 'ha_columnstore' ; Gestion des utilisateurs : CREATE USER 'nouveau_user' @ '%' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON mariadb . * TO 'nouveau_user' @ '%' ; Liens utiles Documentation officielle MariaDB HeidiSQL (Client Windows) Outils de migration MySQL vers MariaDB MariaDB est particuli\u00e8rement adapt\u00e9 pour les applications n\u00e9cessitant une r\u00e9trocompatibilit\u00e9 MySQL avec des am\u00e9liorations de performances et de s\u00e9curit\u00e9. Son support natif des moteurs de stockage multiples (InnoDB, ColumnStore, Aria) en fait un choix polyvalent.","title":"MariaDB"},{"location":"databases/mariadb/#mariadb","text":"MariaDB est un fork open-source de MySQL, offrant une compatibilit\u00e9 compl\u00e8te avec des performances optimis\u00e9es et des fonctionnalit\u00e9s \u00e9tendues.","title":"MariaDB"},{"location":"databases/mariadb/#commandes-makefile","text":"","title":"Commandes Makefile"},{"location":"databases/mariadb/#demarrer-mariadb","text":"Pour d\u00e9marrer un conteneur MariaDB \u00e0 l'aide du Makefile : make run-mariadb","title":"D\u00e9marrer MariaDB"},{"location":"databases/mariadb/#arreter-mariadb","text":"Pour arr\u00eater le conteneur MariaDB en cours d'ex\u00e9cution : make stop-mariadb","title":"Arr\u00eater MariaDB"},{"location":"databases/mariadb/#nettoyer-mariadb","text":"Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 MariaDB : make clean-mariadb","title":"Nettoyer MariaDB"},{"location":"databases/mariadb/#configuration-par-defaut","text":"Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : mariadb:10.10 Port h\u00f4te : 3307 Utilisateur root : root / root Utilisateur standard : mariadb / mariadb Base de donn\u00e9es : mariadb Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/mysql dans le conteneur","title":"Configuration par d\u00e9faut"},{"location":"databases/mariadb/#connexion-a-mariadb","text":"","title":"Connexion \u00e0 MariaDB"},{"location":"databases/mariadb/#utilisation-du-client-en-ligne-de-commande","text":"Connectez-vous avec l'utilisateur standard : mysql -h localhost -P 3307 -u mariadb -p Mot de passe : mariadb","title":"Utilisation du client en ligne de commande"},{"location":"databases/mariadb/#connexion-avec-un-client-graphique","text":"Configuration recommand\u00e9e pour DBeaver : - H\u00f4te : localhost - Port : 3307 - Base de donn\u00e9es : mariadb - Utilisateur : mariadb - Mot de passe : mariadb - Param\u00e8tres avanc\u00e9s : allowPublicKeyRetrieval=true useSSL=false","title":"Connexion avec un client graphique"},{"location":"databases/mariadb/#verification-des-logs","text":"Pour consulter les logs du conteneur MariaDB : docker logs mariadb-local","title":"V\u00e9rification des logs"},{"location":"databases/mariadb/#astuces","text":"Migration depuis MySQL : mysqldump -h mysql-host -u user -p db_name | mysql -h localhost -P 3307 -u mariadb -p mariadb Activation du moteur ColumnStore : INSTALL SONAME 'ha_columnstore' ; Gestion des utilisateurs : CREATE USER 'nouveau_user' @ '%' IDENTIFIED BY 'password' ; GRANT ALL PRIVILEGES ON mariadb . * TO 'nouveau_user' @ '%' ;","title":"Astuces"},{"location":"databases/mariadb/#liens-utiles","text":"Documentation officielle MariaDB HeidiSQL (Client Windows) Outils de migration MySQL vers MariaDB MariaDB est particuli\u00e8rement adapt\u00e9 pour les applications n\u00e9cessitant une r\u00e9trocompatibilit\u00e9 MySQL avec des am\u00e9liorations de performances et de s\u00e9curit\u00e9. Son support natif des moteurs de stockage multiples (InnoDB, ColumnStore, Aria) en fait un choix polyvalent.","title":"Liens utiles"},{"location":"databases/mongodb/","text":"MongoDB MongoDB est une base de donn\u00e9es NoSQL orient\u00e9e documents, id\u00e9ale pour le stockage de donn\u00e9es non structur\u00e9es et l'\u00e9volutivit\u00e9 horizontale. Commandes Makefile D\u00e9marrer MongoDB Pour d\u00e9marrer un conteneur MongoDB \u00e0 l'aide du Makefile : make run-mongo Arr\u00eater MongoDB Pour arr\u00eater le conteneur MongoDB en cours d'ex\u00e9cution : make stop-mongo Nettoyer MongoDB Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 MongoDB : make clean-mongo Configuration par d\u00e9faut Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : mongo:6.0 Port h\u00f4te : 27017 Nom d'utilisateur : mongo Mot de passe : mongo Base de donn\u00e9es : test Volume de donn\u00e9es : Mont\u00e9 dans /data/db dans le conteneur Connexion \u00e0 MongoDB Utilisation de MongoDB Shell (mongosh) Connectez-vous avec la commande : mongosh \"mongodb://localhost:27017/test\" --username mongo --password mongo Connexion avec un client graphique Configuration recommand\u00e9e pour MongoDB Compass : - URI : mongodb://mongo:mongo@localhost:27017/test - Authentication : SCRAM-SHA-256 Configuration DBeaver : - Host : localhost - Port : 27017 - Database : test - User : mongo - Password : mongo - Auth Mechanism : SCRAM-SHA-256 V\u00e9rification des logs Pour consulter les logs du conteneur MongoDB : docker logs mongo-local Astuces Sauvegarde et restauration : Exporter une collection : mongodump --uri = \"mongodb://mongo:mongo@localhost:27017/test\" Importer une sauvegarde : mongorestore --uri = \"mongodb://mongo:mongo@localhost:27017/test\" dump/ Acc\u00e8s direct aux donn\u00e9es : Les documents sont stock\u00e9s au format BSON dans : ~/docker/mongodata Liens utiles Documentation officielle MongoDB MongoDB Compass (GUI Officiel) DBeaver - Prise en charge MongoDB MongoDB excelle dans le stockage de donn\u00e9es semi-structur\u00e9es et les architectures distribu\u00e9es. Utilisez-le pour vos applications n\u00e9cessitant flexibilit\u00e9 et \u00e9volutivit\u00e9 massive.","title":"MongoDB"},{"location":"databases/mongodb/#mongodb","text":"MongoDB est une base de donn\u00e9es NoSQL orient\u00e9e documents, id\u00e9ale pour le stockage de donn\u00e9es non structur\u00e9es et l'\u00e9volutivit\u00e9 horizontale.","title":"MongoDB"},{"location":"databases/mongodb/#commandes-makefile","text":"","title":"Commandes Makefile"},{"location":"databases/mongodb/#demarrer-mongodb","text":"Pour d\u00e9marrer un conteneur MongoDB \u00e0 l'aide du Makefile : make run-mongo","title":"D\u00e9marrer MongoDB"},{"location":"databases/mongodb/#arreter-mongodb","text":"Pour arr\u00eater le conteneur MongoDB en cours d'ex\u00e9cution : make stop-mongo","title":"Arr\u00eater MongoDB"},{"location":"databases/mongodb/#nettoyer-mongodb","text":"Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 MongoDB : make clean-mongo","title":"Nettoyer MongoDB"},{"location":"databases/mongodb/#configuration-par-defaut","text":"Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : mongo:6.0 Port h\u00f4te : 27017 Nom d'utilisateur : mongo Mot de passe : mongo Base de donn\u00e9es : test Volume de donn\u00e9es : Mont\u00e9 dans /data/db dans le conteneur","title":"Configuration par d\u00e9faut"},{"location":"databases/mongodb/#connexion-a-mongodb","text":"","title":"Connexion \u00e0 MongoDB"},{"location":"databases/mongodb/#utilisation-de-mongodb-shell-mongosh","text":"Connectez-vous avec la commande : mongosh \"mongodb://localhost:27017/test\" --username mongo --password mongo","title":"Utilisation de MongoDB Shell (mongosh)"},{"location":"databases/mongodb/#connexion-avec-un-client-graphique","text":"Configuration recommand\u00e9e pour MongoDB Compass : - URI : mongodb://mongo:mongo@localhost:27017/test - Authentication : SCRAM-SHA-256 Configuration DBeaver : - Host : localhost - Port : 27017 - Database : test - User : mongo - Password : mongo - Auth Mechanism : SCRAM-SHA-256","title":"Connexion avec un client graphique"},{"location":"databases/mongodb/#verification-des-logs","text":"Pour consulter les logs du conteneur MongoDB : docker logs mongo-local","title":"V\u00e9rification des logs"},{"location":"databases/mongodb/#astuces","text":"Sauvegarde et restauration : Exporter une collection : mongodump --uri = \"mongodb://mongo:mongo@localhost:27017/test\" Importer une sauvegarde : mongorestore --uri = \"mongodb://mongo:mongo@localhost:27017/test\" dump/ Acc\u00e8s direct aux donn\u00e9es : Les documents sont stock\u00e9s au format BSON dans : ~/docker/mongodata","title":"Astuces"},{"location":"databases/mongodb/#liens-utiles","text":"Documentation officielle MongoDB MongoDB Compass (GUI Officiel) DBeaver - Prise en charge MongoDB MongoDB excelle dans le stockage de donn\u00e9es semi-structur\u00e9es et les architectures distribu\u00e9es. Utilisez-le pour vos applications n\u00e9cessitant flexibilit\u00e9 et \u00e9volutivit\u00e9 massive.","title":"Liens utiles"},{"location":"databases/mysql/","text":"MySQL MySQL est un syst\u00e8me de gestion de base de donn\u00e9es relationnelle open source, connu pour sa simplicit\u00e9, sa rapidit\u00e9 et son utilisation dans de nombreuses applications web. Commandes Makefile D\u00e9marrer MySQL Pour d\u00e9marrer un conteneur MySQL \u00e0 l'aide du Makefile , utilisez la commande suivante : make run-mysql Arr\u00eater MySQL Pour arr\u00eater le conteneur MySQL en cours d'ex\u00e9cution : make stop-mysql Nettoyer MySQL Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 MySQL : make clean-mysql Configuration par d\u00e9faut Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : mysql:latest Port h\u00f4te : 3306 Nom d'utilisateur : root Mot de passe : password Base de donn\u00e9es par d\u00e9faut : my_database Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/mysql dans le conteneur. Vous pouvez modifier ces param\u00e8tres directement dans le Makefile pour r\u00e9pondre \u00e0 vos besoins. Connexion \u00e0 MySQL Utilisation de la ligne de commande MySQL Une fois le conteneur d\u00e9marr\u00e9, connectez-vous \u00e0 MySQL avec la commande suivante : mysql -h 127 .0.0.1 -P 3306 -u root -p Entrez le mot de passe (par d\u00e9faut, password ). Connexion avec un client graphique Pour un acc\u00e8s graphique, utilisez un client tel que DBeaver , MySQL Workbench ou TablePlus . Configurez les param\u00e8tres suivants : H\u00f4te : 127.0.0.1 Port : 3306 Utilisateur : root Mot de passe : password Base de donn\u00e9es : my_database (ou une autre si vous l'avez configur\u00e9e). V\u00e9rification des logs Pour consulter les logs du conteneur MySQL, ex\u00e9cutez : docker logs mysql Cela permet de diagnostiquer d'\u00e9ventuels probl\u00e8mes ou de surveiller l'activit\u00e9 de la base de donn\u00e9es. Astuces Cr\u00e9er une nouvelle base de donn\u00e9es : Une fois connect\u00e9 \u00e0 MySQL, ex\u00e9cutez : CREATE DATABASE nouvelle_base ; Sauvegarder et restaurer une base de donn\u00e9es : Sauvegarder une base : mysqldump -h 127 .0.0.1 -u root -p my_database > backup.sql Restaurer une base : mysql -h 127 .0.0.1 -u root -p my_database < backup.sql Acc\u00e8s aux donn\u00e9es persistantes : Les donn\u00e9es sont stock\u00e9es dans un volume Docker, accessible dans le dossier /var/lib/mysql . Assurez-vous de sauvegarder ce volume si n\u00e9cessaire. Liens utiles Documentation officielle MySQL MySQL Workbench (Client graphique) DBeaver (Client graphique) MySQL est un choix populaire pour des bases de donn\u00e9es relationnelles l\u00e9g\u00e8res et performantes, particuli\u00e8rement adapt\u00e9 aux applications web n\u00e9cessitant une gestion rapide et efficace des donn\u00e9es.","title":"MySQL"},{"location":"databases/mysql/#mysql","text":"MySQL est un syst\u00e8me de gestion de base de donn\u00e9es relationnelle open source, connu pour sa simplicit\u00e9, sa rapidit\u00e9 et son utilisation dans de nombreuses applications web.","title":"MySQL"},{"location":"databases/mysql/#commandes-makefile","text":"","title":"Commandes Makefile"},{"location":"databases/mysql/#demarrer-mysql","text":"Pour d\u00e9marrer un conteneur MySQL \u00e0 l'aide du Makefile , utilisez la commande suivante : make run-mysql","title":"D\u00e9marrer MySQL"},{"location":"databases/mysql/#arreter-mysql","text":"Pour arr\u00eater le conteneur MySQL en cours d'ex\u00e9cution : make stop-mysql","title":"Arr\u00eater MySQL"},{"location":"databases/mysql/#nettoyer-mysql","text":"Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 MySQL : make clean-mysql","title":"Nettoyer MySQL"},{"location":"databases/mysql/#configuration-par-defaut","text":"Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : mysql:latest Port h\u00f4te : 3306 Nom d'utilisateur : root Mot de passe : password Base de donn\u00e9es par d\u00e9faut : my_database Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/mysql dans le conteneur. Vous pouvez modifier ces param\u00e8tres directement dans le Makefile pour r\u00e9pondre \u00e0 vos besoins.","title":"Configuration par d\u00e9faut"},{"location":"databases/mysql/#connexion-a-mysql","text":"","title":"Connexion \u00e0 MySQL"},{"location":"databases/mysql/#utilisation-de-la-ligne-de-commande-mysql","text":"Une fois le conteneur d\u00e9marr\u00e9, connectez-vous \u00e0 MySQL avec la commande suivante : mysql -h 127 .0.0.1 -P 3306 -u root -p Entrez le mot de passe (par d\u00e9faut, password ).","title":"Utilisation de la ligne de commande MySQL"},{"location":"databases/mysql/#connexion-avec-un-client-graphique","text":"Pour un acc\u00e8s graphique, utilisez un client tel que DBeaver , MySQL Workbench ou TablePlus . Configurez les param\u00e8tres suivants : H\u00f4te : 127.0.0.1 Port : 3306 Utilisateur : root Mot de passe : password Base de donn\u00e9es : my_database (ou une autre si vous l'avez configur\u00e9e).","title":"Connexion avec un client graphique"},{"location":"databases/mysql/#verification-des-logs","text":"Pour consulter les logs du conteneur MySQL, ex\u00e9cutez : docker logs mysql Cela permet de diagnostiquer d'\u00e9ventuels probl\u00e8mes ou de surveiller l'activit\u00e9 de la base de donn\u00e9es.","title":"V\u00e9rification des logs"},{"location":"databases/mysql/#astuces","text":"Cr\u00e9er une nouvelle base de donn\u00e9es : Une fois connect\u00e9 \u00e0 MySQL, ex\u00e9cutez : CREATE DATABASE nouvelle_base ; Sauvegarder et restaurer une base de donn\u00e9es : Sauvegarder une base : mysqldump -h 127 .0.0.1 -u root -p my_database > backup.sql Restaurer une base : mysql -h 127 .0.0.1 -u root -p my_database < backup.sql Acc\u00e8s aux donn\u00e9es persistantes : Les donn\u00e9es sont stock\u00e9es dans un volume Docker, accessible dans le dossier /var/lib/mysql . Assurez-vous de sauvegarder ce volume si n\u00e9cessaire.","title":"Astuces"},{"location":"databases/mysql/#liens-utiles","text":"Documentation officielle MySQL MySQL Workbench (Client graphique) DBeaver (Client graphique) MySQL est un choix populaire pour des bases de donn\u00e9es relationnelles l\u00e9g\u00e8res et performantes, particuli\u00e8rement adapt\u00e9 aux applications web n\u00e9cessitant une gestion rapide et efficace des donn\u00e9es.","title":"Liens utiles"},{"location":"databases/postgres/","text":"PostgreSQL PostgreSQL est une base de donn\u00e9es relationnelle puissante et open source qui met l'accent sur l'extensibilit\u00e9 et la conformit\u00e9 avec les standards SQL. Commandes Makefile D\u00e9marrer PostgreSQL Pour d\u00e9marrer un conteneur PostgreSQL \u00e0 l'aide du Makefile , utilisez la commande suivante : make run-postgres Arr\u00eater PostgreSQL Pour arr\u00eater le conteneur PostgreSQL en cours d'ex\u00e9cution : make stop-postgres Nettoyer PostgreSQL Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 PostgreSQL : make clean-postgres Configuration par d\u00e9faut Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : postgres:latest Port h\u00f4te : 5432 Nom d'utilisateur : postgres Mot de passe : password Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/postgresql/data dans le conteneur. Vous pouvez modifier ces param\u00e8tres directement dans le Makefile si n\u00e9cessaire. Connexion \u00e0 PostgreSQL Utilisation de psql Une fois le conteneur d\u00e9marr\u00e9, vous pouvez vous connecter \u00e0 PostgreSQL \u00e0 l'aide de l'outil en ligne de commande psql : psql -h localhost -U postgres Le mot de passe sera celui d\u00e9fini dans le Makefile (par d\u00e9faut, password ). Connexion avec un client graphique Vous pouvez utiliser un client graphique comme DBeaver , pgAdmin ou TablePlus . Configurez simplement les param\u00e8tres de connexion comme suit : H\u00f4te : localhost Port : 5432 Utilisateur : postgres Mot de passe : password Base de donn\u00e9es : postgres (par d\u00e9faut) V\u00e9rification des logs Pour consulter les logs du conteneur PostgreSQL, ex\u00e9cutez : docker logs postgres Cela peut vous aider \u00e0 diagnostiquer des erreurs ou \u00e0 surveiller l'activit\u00e9. Astuces Backup et Restauration : Sauvegarder une base de donn\u00e9es : pg_dump -h localhost -U postgres <nom_base> > backup.sql Restaurer une base de donn\u00e9es : psql -h localhost -U postgres <nom_base> < backup.sql Acc\u00e8s aux donn\u00e9es persistantes : Les donn\u00e9es sont stock\u00e9es dans un volume Docker, accessible dans le dossier /var/lib/postgresql/data . Veillez \u00e0 ne pas supprimer ce volume si vous souhaitez conserver vos donn\u00e9es. Liens utiles Documentation officielle PostgreSQL DBeaver (Client graphique) pgAdmin PostgreSQL est id\u00e9al pour g\u00e9rer des donn\u00e9es relationnelles robustes avec des performances \u00e9lev\u00e9es et des fonctionnalit\u00e9s avanc\u00e9es. Utilisez-le pour vos projets n\u00e9cessitant un stockage structur\u00e9 et fiable.","title":"PostgreSQL"},{"location":"databases/postgres/#postgresql","text":"PostgreSQL est une base de donn\u00e9es relationnelle puissante et open source qui met l'accent sur l'extensibilit\u00e9 et la conformit\u00e9 avec les standards SQL.","title":"PostgreSQL"},{"location":"databases/postgres/#commandes-makefile","text":"","title":"Commandes Makefile"},{"location":"databases/postgres/#demarrer-postgresql","text":"Pour d\u00e9marrer un conteneur PostgreSQL \u00e0 l'aide du Makefile , utilisez la commande suivante : make run-postgres","title":"D\u00e9marrer PostgreSQL"},{"location":"databases/postgres/#arreter-postgresql","text":"Pour arr\u00eater le conteneur PostgreSQL en cours d'ex\u00e9cution : make stop-postgres","title":"Arr\u00eater PostgreSQL"},{"location":"databases/postgres/#nettoyer-postgresql","text":"Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 PostgreSQL : make clean-postgres","title":"Nettoyer PostgreSQL"},{"location":"databases/postgres/#configuration-par-defaut","text":"Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : postgres:latest Port h\u00f4te : 5432 Nom d'utilisateur : postgres Mot de passe : password Volume de donn\u00e9es : Mont\u00e9 dans /var/lib/postgresql/data dans le conteneur. Vous pouvez modifier ces param\u00e8tres directement dans le Makefile si n\u00e9cessaire.","title":"Configuration par d\u00e9faut"},{"location":"databases/postgres/#connexion-a-postgresql","text":"","title":"Connexion \u00e0 PostgreSQL"},{"location":"databases/postgres/#utilisation-de-psql","text":"Une fois le conteneur d\u00e9marr\u00e9, vous pouvez vous connecter \u00e0 PostgreSQL \u00e0 l'aide de l'outil en ligne de commande psql : psql -h localhost -U postgres Le mot de passe sera celui d\u00e9fini dans le Makefile (par d\u00e9faut, password ).","title":"Utilisation de psql"},{"location":"databases/postgres/#connexion-avec-un-client-graphique","text":"Vous pouvez utiliser un client graphique comme DBeaver , pgAdmin ou TablePlus . Configurez simplement les param\u00e8tres de connexion comme suit : H\u00f4te : localhost Port : 5432 Utilisateur : postgres Mot de passe : password Base de donn\u00e9es : postgres (par d\u00e9faut)","title":"Connexion avec un client graphique"},{"location":"databases/postgres/#verification-des-logs","text":"Pour consulter les logs du conteneur PostgreSQL, ex\u00e9cutez : docker logs postgres Cela peut vous aider \u00e0 diagnostiquer des erreurs ou \u00e0 surveiller l'activit\u00e9.","title":"V\u00e9rification des logs"},{"location":"databases/postgres/#astuces","text":"Backup et Restauration : Sauvegarder une base de donn\u00e9es : pg_dump -h localhost -U postgres <nom_base> > backup.sql Restaurer une base de donn\u00e9es : psql -h localhost -U postgres <nom_base> < backup.sql Acc\u00e8s aux donn\u00e9es persistantes : Les donn\u00e9es sont stock\u00e9es dans un volume Docker, accessible dans le dossier /var/lib/postgresql/data . Veillez \u00e0 ne pas supprimer ce volume si vous souhaitez conserver vos donn\u00e9es.","title":"Astuces"},{"location":"databases/postgres/#liens-utiles","text":"Documentation officielle PostgreSQL DBeaver (Client graphique) pgAdmin PostgreSQL est id\u00e9al pour g\u00e9rer des donn\u00e9es relationnelles robustes avec des performances \u00e9lev\u00e9es et des fonctionnalit\u00e9s avanc\u00e9es. Utilisez-le pour vos projets n\u00e9cessitant un stockage structur\u00e9 et fiable.","title":"Liens utiles"},{"location":"databases/redis/","text":"Redis Redis est un syst\u00e8me de stockage cl\u00e9-valeur en m\u00e9moire, id\u00e9al pour le caching, les sessions utilisateur et les op\u00e9rations temps r\u00e9el. Commandes Makefile D\u00e9marrer Redis Pour d\u00e9marrer un conteneur Redis \u00e0 l'aide du Makefile : make run-redis Arr\u00eater Redis Pour arr\u00eater le conteneur Redis en cours d'ex\u00e9cution : make stop-redis Nettoyer Redis Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 Redis : make clean-redis Configuration par d\u00e9faut Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : redis:7 Port h\u00f4te : 6379 Persistance : Activ\u00e9e via RDB (snapshots) Volume de donn\u00e9es : Mont\u00e9 dans /data dans le conteneur Authentification : D\u00e9sactiv\u00e9e par d\u00e9faut Connexion \u00e0 Redis Utilisation de Redis-CLI Connectez-vous directement au serveur : redis-cli -h localhost -p 6379 Connexion avec un client graphique Configuration recommand\u00e9e pour RedisInsight : - Host : localhost - Port : 6379 - Name : Redis Local Configuration DBeaver : - Host : localhost - Port : 6379 - Database : 0 - Auth : (laisser vide) V\u00e9rification des logs Pour consulter les logs du conteneur Redis : docker logs redis-local Astuces Persistance des donn\u00e9es : Les snapshots sont sauvegard\u00e9s toutes les 15 minutes dans : ~/docker/redisdata/dump.rdb Commandes essentielles : SET cle \"valeur\" # Stocker une valeur GET cle # R\u00e9cup\u00e9rer une valeur KEYS * # Lister toutes les cl\u00e9s FLUSHALL # Purger toutes les donn\u00e9es Monitoring en temps r\u00e9el : redis-cli -h localhost -p 6379 --stat Liens utiles Documentation officielle Redis RedisInsight (GUI Officiel) Jeu de commandes Redis Redis excelle dans les sc\u00e9narios n\u00e9cessitant des performances extr\u00eames et une latence ultra-faible. Utilisez-le pour le caching, les syst\u00e8mes de messagerie temps r\u00e9el ou les leaderboards.","title":"Redis"},{"location":"databases/redis/#redis","text":"Redis est un syst\u00e8me de stockage cl\u00e9-valeur en m\u00e9moire, id\u00e9al pour le caching, les sessions utilisateur et les op\u00e9rations temps r\u00e9el.","title":"Redis"},{"location":"databases/redis/#commandes-makefile","text":"","title":"Commandes Makefile"},{"location":"databases/redis/#demarrer-redis","text":"Pour d\u00e9marrer un conteneur Redis \u00e0 l'aide du Makefile : make run-redis","title":"D\u00e9marrer Redis"},{"location":"databases/redis/#arreter-redis","text":"Pour arr\u00eater le conteneur Redis en cours d'ex\u00e9cution : make stop-redis","title":"Arr\u00eater Redis"},{"location":"databases/redis/#nettoyer-redis","text":"Pour supprimer le conteneur et les volumes associ\u00e9s \u00e0 Redis : make clean-redis","title":"Nettoyer Redis"},{"location":"databases/redis/#configuration-par-defaut","text":"Les param\u00e8tres par d\u00e9faut d\u00e9finis dans le Makefile sont : Image Docker : redis:7 Port h\u00f4te : 6379 Persistance : Activ\u00e9e via RDB (snapshots) Volume de donn\u00e9es : Mont\u00e9 dans /data dans le conteneur Authentification : D\u00e9sactiv\u00e9e par d\u00e9faut","title":"Configuration par d\u00e9faut"},{"location":"databases/redis/#connexion-a-redis","text":"","title":"Connexion \u00e0 Redis"},{"location":"databases/redis/#utilisation-de-redis-cli","text":"Connectez-vous directement au serveur : redis-cli -h localhost -p 6379","title":"Utilisation de Redis-CLI"},{"location":"databases/redis/#connexion-avec-un-client-graphique","text":"Configuration recommand\u00e9e pour RedisInsight : - Host : localhost - Port : 6379 - Name : Redis Local Configuration DBeaver : - Host : localhost - Port : 6379 - Database : 0 - Auth : (laisser vide)","title":"Connexion avec un client graphique"},{"location":"databases/redis/#verification-des-logs","text":"Pour consulter les logs du conteneur Redis : docker logs redis-local","title":"V\u00e9rification des logs"},{"location":"databases/redis/#astuces","text":"Persistance des donn\u00e9es : Les snapshots sont sauvegard\u00e9s toutes les 15 minutes dans : ~/docker/redisdata/dump.rdb Commandes essentielles : SET cle \"valeur\" # Stocker une valeur GET cle # R\u00e9cup\u00e9rer une valeur KEYS * # Lister toutes les cl\u00e9s FLUSHALL # Purger toutes les donn\u00e9es Monitoring en temps r\u00e9el : redis-cli -h localhost -p 6379 --stat","title":"Astuces"},{"location":"databases/redis/#liens-utiles","text":"Documentation officielle Redis RedisInsight (GUI Officiel) Jeu de commandes Redis Redis excelle dans les sc\u00e9narios n\u00e9cessitant des performances extr\u00eames et une latence ultra-faible. Utilisez-le pour le caching, les syst\u00e8mes de messagerie temps r\u00e9el ou les leaderboards.","title":"Liens utiles"}]}